/* Generated By:JJTree: Do not edit this line. ASTcomplexRegularExpression.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package parser;

public
class ASTcomplexRegularExpression extends SimpleNode{
	
  public ASTcomplexRegularExpression(ASTcomplexRegularExpression copy)
  {
	  super(SparcTranslatorTreeConstants.JJTCOMPLEXREGULAREXPRESSION);
	//  System.out.println("----------------------------------");s
	//  System.out.println("----------------------------------");
	  this.parent=copy.parent;
	  this.children=new ASTcomplexRegularExpressionRepeatableUnit[copy.children.length];
	  for(int i=0;i<copy.children.length;++i)
	  {
		  
		  this.children[i]=new ASTcomplexRegularExpressionRepeatableUnit(SparcTranslatorTreeConstants.JJTCOMPLEXREGULAREXPRESSIONREPEATABLEUNIT);
		  ((SimpleNode)this.children[i]).parent= this;
		  this.children[i].jjtAddChild(copy.children[i].jjtGetChild(0), 0);
		  if(copy.children[i].jjtGetNumChildren()>1)
		  {
			 
			 ASTrepeatition newrep=new ASTrepeatition(SparcTranslatorTreeConstants.JJTREPEATITION);
			 newrep.parent=this.children[i];
			 newrep.image=new String(((SimpleNode)copy.children[i].jjtGetChild(1)).image);
		     this.children[i].jjtAddChild(newrep,1);
		  }
	  }
  }
  public ASTcomplexRegularExpression(int id) {
    super(id);
  }

  public ASTcomplexRegularExpression(SparcTranslator p, int id) {
    super(p, id);
  }

  
  /** Accept the visitor. **/
  public Object jjtAccept(SparcTranslatorVisitor visitor, Object data) {
    return visitor.visit(this, data);
  }

}
/* JavaCC - OriginalChecksum=4b5708d627180cfa1c4e974f1d941599 (do not edit this line) */
