/* Generated By:JJTree: Do not edit this line. ASTcharacterList.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package parser;

public
class ASTcharacterList extends SimpleNode {
  public ASTcharacterList(int id) {
    super(id);
  }

  public ASTcharacterList(SparcTranslator p, int id) {
    super(p, id);
  }


  /** Accept the visitor. **/
  public Object jjtAccept(SparcTranslatorVisitor visitor, Object data) {
    return visitor.visit(this, data);
  }
  public void split()
  {
//	  complexRegularExpression 
//     complexRegularExpressionRepeatableUnit 
//      complexRegularExpressionUnit 
//       characterList a z

// complexRegularExpressionChoices 
 //            complexRegularExpression 
  //            complexRegularExpressionRepeatableUnit 
   //            complexRegularExpressionUnit 
    //            characterRegularExpression a
     //        complexRegularExpression 
      //        complexRegularExpressionRepeatableUnit 
      ///        complexRegularExpressionUnit 
         //       characterRegularExpression b
          //   complexRegularExpression 
           //   complexRegularExpressionRepeatableUnit 
            //   complexRegularExpressionUnit 
             //   characterRegularExpression c

    String range[]=image.split(" ");
    SimpleNode parent=(SimpleNode) this.parent;
    parent.removerightMostChild();
    ASTcomplexRegularExpressionChoices choices=
    		new ASTcomplexRegularExpressionChoices(SparcTranslatorTreeConstants.JJTCOMPLEXREGULAREXPRESSIONCHOICES);
    parent.jjtAddChild(choices, 0);
    int place=0;
    for(char c=range[0].charAt(0);c<=range[1].charAt(0);c++)
    {
    	ASTcomplexRegularExpressionRepeatableUnit repunit=
    		 new ASTcomplexRegularExpressionRepeatableUnit(SparcTranslatorTreeConstants.JJTCOMPLEXREGULAREXPRESSIONREPEATABLEUNIT);
    	ASTcomplexRegularExpressionUnit unit=
    	     new ASTcomplexRegularExpressionUnit(SparcTranslatorTreeConstants.JJTCOMPLEXREGULAREXPRESSIONUNIT);
    	ASTcomplexRegularExpression cexpt=
       	     new ASTcomplexRegularExpression(SparcTranslatorTreeConstants.JJTCOMPLEXREGULAREXPRESSION);
    	ASTcharacterRegularExpression charexpt=
          	     new ASTcharacterRegularExpression(SparcTranslatorTreeConstants.JJTCHARACTERREGULAREXPRESSION);
    	charexpt.image=Character.toString(c);
    	
    	unit.jjtAddChild(charexpt, 0);
    	repunit.jjtAddChild(unit,0);
    	cexpt.jjtAddChild(repunit, 0);
    	choices.jjtAddChild(cexpt, place++);
    }
  
    
  }
}
/* JavaCC - OriginalChecksum=c7fe6bcfd0ad07e4753ebfaa9311251d (do not edit this line) */
