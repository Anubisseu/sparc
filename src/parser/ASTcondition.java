/* Generated By:JJTree: Do not edit this line. ASTcondition.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package parser;

import java.util.HashMap;

public
class ASTcondition extends SimpleNode {
  public ASTcondition(int id) {
    super(id);
  }

  public ASTcondition(SparcTranslator p, int id) {
    super(p, id);
  }


  /** Accept the visitor. **/
  public Object jjtAccept(SparcTranslatorVisitor visitor, Object data) {
    return visitor.visit(this, data);
  }
  
  public String toString(HashMap<String,Integer> map) throws ParseException
  {
	  ASTarithmeticTerm child1=((ASTarithmeticTerm)(this.jjtGetChild(0)));
	  ASTarithmeticTerm child2=((ASTarithmeticTerm)(this.jjtGetChild(1)));
	  child1.applyRenaming(map);
	  child2.applyRenaming(map);
	  return "{"+child1.toString()+this.image+child2.toString()+"}";
  }
  
  public String toString() {
     return image;
  }
}
/* JavaCC - OriginalChecksum=11f78abe16769dee7d82e223ce011f32 (do not edit this line) */
